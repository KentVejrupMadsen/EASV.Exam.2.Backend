{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "kanban_project_backend_api",
    "contact" : {
      "name" : "kent vejrup madsen",
      "url" : "https://github.com/KentVejrupMadsen",
      "email" : "kent.vejrup.madsen@protonmail.com"
    },
    "servers": [
        {
            "url": "https://kanban.goalpioneers.com/api/1.0.0",
            "description": "public available server"
        },
        {
            "url": "http://localhost:8000/api/1.0.0",
            "description": "local development server"
        }
    ],
    "paths": {
        "/api/1.0.0/accounts/account/me": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account",
                    "authentication"
                ],
                "operationId": "c0bab5220530bfa07223c74f6f214cb2",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": "<<<JSON"
                            },
                            "application/xml": {
                                "schema": {},
                                "example": ""
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account"
                ],
                "operationId": "121077445940ac8019248752b6ede69c",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/login": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account",
                    "authentication"
                ],
                "operationId": "e832983ffa2b58622abe013f6731bc5e",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/logout": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account",
                    "authentication"
                ],
                "operationId": "cf3e4f718e9cb3d650efb0d62d647eec",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account",
                    "authentication"
                ],
                "operationId": "aad533bcd63625a1775284f06134073a",
                "responses": {
                    "201": {
                        "description": "Account created",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - an account already exist with the given parameters"
                    },
                    "540": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "account"
                ],
                "operationId": "70dd13b0ed7285230395b950e6d0e0a3",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "account"
                ],
                "operationId": "f832cada551424587743343b2b5e6723",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/account/verify": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account",
                    "authentication"
                ],
                "operationId": "7c0f062fae9f153af1d3c7b6f80e6d9e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/information/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account",
                    "account-additional"
                ],
                "operationId": "ea305e1cc3e03cdcdb90ca069c2614c6",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/1.0.0/accounts/information/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account",
                    "account-additional"
                ],
                "operationId": "49ebaed678ed332bbec20c5deef04e1e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/information/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "account",
                    "account-additional"
                ],
                "operationId": "7e48e391ba10dd50c952622e9ca231a5",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/information/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "account",
                    "account-additional"
                ],
                "operationId": "f9fc08be44f6d51f141efe15823ac082",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/newsletter/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "newsletter"
                ],
                "operationId": "447f5060aa95a2d3e5024ce593f2c1f3",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/newsletter/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "newsletter"
                ],
                "operationId": "adcf4744b0d0fd4b9de556fe76af3130",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/newsletter/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "newsletter"
                ],
                "operationId": "1e7890a3eb7eee296929234e202f1907",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/newsletter/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "newsletter"
                ],
                "operationId": "b6bcc759abff267003457229e6c2e16c",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/address/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "27b4ec67ec6d9468a65918c6388ffb43",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/address/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "305c01028309618efa05180a8244651f",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/address/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "d836d4d133c825c1d4fa59fb5c1c726e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/address/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "55b8e1bb00c920678c3f1275393ece53",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/email/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "summary": "Pipeline function:",
                "operationId": "d616fa2a99fe38bef5e566640786669a",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/email/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "7463dcf946e990dd2d52b18de4be045b",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/email/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "3593f15ae3f1470864cdb1a8914e2804",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data"
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/email/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "a2a11c6f0ca4c97d3db042b9e88acbb0",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data"
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/name/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "d6ea504f5f8b2d7bcdf265aa69fc116e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reads a specific person name entity values from the database table",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/name/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "46874addfd17ebb1e1566d2e0dc24afc",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deletes a specific person name entity from the database table",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/name/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "6e17dd036d5e9ded9ba662442b321631",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "creates a specific person name entity by inserting it into the database",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/accounts/entities/name/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "account-additional"
                ],
                "operationId": "618f54cf35cd557426767ccfbe57c09b",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updates the person entities name with a new name",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/options/find/email": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account-options"
                ],
                "operationId": "cdb466a47aae7fdafa82ff89c5b519cc",
                "responses": {
                    "200": {
                        "description": "validates if the requested email is existing in the database as a json response."
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/options/state/email": {
            "post": {
                "tags": [
                    "1.0.0",
                    "account-options"
                ],
                "operationId": "6cb689dd782f6a330daee9cade2dd995",
                "responses": {
                    "200": {
                        "description": "validates if the requested email is existing in the database as a json response."
                    }
                }
            }
        },
        "/api/1.0.0/securities/csrf/access": {
            "post": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "26c87c50b6b698a08e3eb8ea386024fd",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/csrf/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "43e4176a2a3c448d0092503975905adb",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/csrf/create": {
            "get": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "0fe6763e017a22cda2cf355b7b6e0822",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/csrf/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "f302cfaf4b1c814a56d49df544c2cf88",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/csrf/reset": {
            "get": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "68b2f372ce7e188bb071a7c5fc32ce0d",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/csrf/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "6afa39961cfb7b2d2bbc1ce726566e4f",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/configuration/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "62c56ffb7f2b03488c2c043d68fa84f3",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/configuration/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "e34df4ff721ce5c9bf3eae2b23b68a90",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/configuration/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "cd6b3110866b696180f33f29299ccdaf",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/configuration/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "2af51c2259d3fbd150653754c219b227",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/recaptcha/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "0ca673d55bab6494c13345d7b5a21713",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/recaptcha/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "10ee50b5e9ab7aa2fb0ff535c1e9bcfa",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/recaptcha/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "0721dc07f01dae7d7997f4a62493b57c",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/securities/recaptcha/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "security"
                ],
                "operationId": "acf5106395661b211e4f235a6e941c9c",
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/board/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "82aceb60963a81d9a06b4297118ce15e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data"
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/board/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "e739d17aebe07014f834c32303e43e8c",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/board/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "694b57af69dc2ecbb8a2feda4d6410e7",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/board/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "ab94a4abf9f7dd92c798568b6ec245e1",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/kanban/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "c3d01eac11e8ab25d944eec208db69ac",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/kanban/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "12c2ae667d22b2aae942f1f5be663661",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/kanban/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "237a0d891a742614f22895c66b5004f9",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/kanban/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "dd33daff5fc6dcd2933e4f0eb0387583",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "ee31804041ad9f9b4b1bb3400613dec0",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "0319e7eea99710b62563e93ea422caae",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "e6b37c44707519392cacea3057242690",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "8fa14f4b614299b8c634db192c86614c",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/group/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "bc95e2cdede40804b5cbb44553306b30",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/group/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "18acb0cac60ae4d3e86a758bc31e4eab",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/group/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "0043828634c876a2a66974e288e0bbfc",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/project/group/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "c3f2cbfd8da4de93adfb44de9b06b76f",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/task/create": {
            "post": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "3740b6719abc26ea8ebca2eed42f7b62",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create a new task for a kanban board",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/task/read": {
            "get": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "2c4be5ae0d1af6d3808028977f4093ce",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "read the content of a task",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/task/update": {
            "patch": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "4a0df3ff2ef01c359593af31c903e369",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updates the information for a specific task",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        },
        "/api/1.0.0/tools/task/delete": {
            "delete": {
                "tags": [
                    "1.0.0",
                    "tools"
                ],
                "operationId": "af51d18d812723fb47baaa951c9debde",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "has to be included in the header of the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a specific tasks.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "content not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CSRFResponseJSONFactory": {},
            "AccountController": {},
            "InformationController": {},
            "NewsletterController": {},
            "PersonAddressController": {
                "description": "Account Email controller. That are used when getting \"ask\" by a computer for data."
            },
            "PersonEmailController": {
                "description": "Account Email controller. That are used when getting \"ask\" by a computer for data."
            },
            "PersonNameController": {
                "description": "Account Email controller. That are used when getting \"ask\" by a computer for data."
            },
            "FindController": {},
            "StateController": {},
            "SecurityCSRFTokenController": {},
            "SecurityConfigurationController": {},
            "SecurityRecaptchaController": {},
            "BoardController": {},
            "KanbanController": {},
            "ProjectController": {},
            "ProjectMemberController": {},
            "TaskController": {},
            "AccountRequest": {},
            "InformationRequest": {},
            "NewsletterRequest": {},
            "PersonAddressRequest": {},
            "PersonEmailRequest": {},
            "PersonNameRequest": {},
            "FindRequest": {},
            "StateRequest": {},
            "SecurityCSRFRequest": {},
            "SecurityConfigurationRequest": {},
            "SecurityRecaptchaRequest": {},
            "ToolsBoardRequest": {},
            "ToolsKanbanRequest": {},
            "ToolsProjectMemberRequest": {},
            "ToolsProjectRequest": {},
            "ToolsTaskRequest": {},
            "AccountState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "account_states"
                                ]
                            },
                            "field_account_id": {
                                "type": "string",
                                "enum": [
                                    "account_id"
                                ]
                            },
                            "field_deactivated": {
                                "type": "string",
                                "enum": [
                                    "deactivated"
                                ]
                            },
                            "field_writeable_disabled": {
                                "type": "string",
                                "enum": [
                                    "writeable_disabled"
                                ]
                            },
                            "field_locked": {
                                "type": "string",
                                "enum": [
                                    "locked"
                                ]
                            },
                            "field_archived": {
                                "type": "string",
                                "enum": [
                                    "archived"
                                ]
                            }
                        }
                    }
                ]
            },
            "CSRFModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 8,
                                "minimum": 8
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "security_csrf_token"
                                ]
                            },
                            "field_assigned_to": {
                                "type": "string",
                                "enum": [
                                    "assigned_to"
                                ]
                            },
                            "field_issued": {
                                "type": "string",
                                "enum": [
                                    "issued"
                                ]
                            },
                            "field_accessed": {
                                "type": "string",
                                "enum": [
                                    "accessed"
                                ]
                            },
                            "field_activated": {
                                "type": "string",
                                "enum": [
                                    "activated"
                                ]
                            },
                            "field_invalidated": {
                                "type": "string",
                                "enum": [
                                    "invalidated"
                                ]
                            },
                            "field_secret_token": {
                                "type": "string",
                                "enum": [
                                    "secret_token"
                                ]
                            },
                            "field_secure_token": {
                                "type": "string",
                                "enum": [
                                    "secure_token"
                                ]
                            },
                            "field_identity": {
                                "type": "string",
                                "enum": [
                                    "id"
                                ]
                            }
                        }
                    }
                ]
            },
            "ConfigurationModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "security_configuration"
                                ]
                            },
                            "field_key": {
                                "type": "string",
                                "enum": [
                                    "key"
                                ]
                            },
                            "field_value": {
                                "type": "string",
                                "enum": [
                                    "value"
                                ]
                            }
                        }
                    }
                ]
            },
            "RecaptchaModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 5,
                                "minimum": 5
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "security_recaptcha"
                                ]
                            },
                            "field_success": {
                                "type": "string",
                                "enum": [
                                    "success"
                                ]
                            },
                            "field_score": {
                                "type": "string",
                                "enum": [
                                    "score"
                                ]
                            },
                            "field_at_date": {
                                "type": "string",
                                "enum": [
                                    "at_date"
                                ]
                            },
                            "field_hostname": {
                                "type": "string",
                                "enum": [
                                    "hostname"
                                ]
                            },
                            "field_error": {
                                "type": "string",
                                "enum": [
                                    "error"
                                ]
                            }
                        }
                    }
                ]
            },
            "AccountEmailModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "account_emails"
                                ]
                            }
                        }
                    }
                ]
            },
            "AccountInformationModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "account_information_options"
                                ]
                            },
                            "field_account": {
                                "type": "string",
                                "enum": [
                                    "account_id"
                                ]
                            },
                            "field_created_at": {
                                "type": "string",
                                "enum": [
                                    "created_at"
                                ]
                            },
                            "field_updated_at": {
                                "type": "string",
                                "enum": [
                                    "updated_at"
                                ]
                            },
                            "field_settings": {
                                "type": "string",
                                "enum": [
                                    "settings"
                                ]
                            }
                        }
                    }
                ]
            },
            "AddressModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "timestamps": {
                                "type": "boolean"
                            },
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 6,
                                "minimum": 6
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 4,
                                "minimum": 4
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "addresses"
                                ]
                            },
                            "field_account_information_id": {
                                "type": "string",
                                "enum": [
                                    "account_information_id"
                                ]
                            },
                            "field_road_name_id": {
                                "type": "string",
                                "enum": [
                                    "road_name_id"
                                ]
                            },
                            "field_road_number": {
                                "type": "string",
                                "enum": [
                                    "road_number"
                                ]
                            },
                            "field_levels": {
                                "type": "string",
                                "enum": [
                                    "levels"
                                ]
                            },
                            "field_country_id": {
                                "type": "string",
                                "enum": [
                                    "country_id"
                                ]
                            },
                            "field_zip_code_id": {
                                "type": "string",
                                "enum": [
                                    "zip_code_id"
                                ]
                            }
                        }
                    }
                ]
            },
            "AddressRoadNameModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "address_road_names"
                                ]
                            }
                        }
                    }
                ]
            },
            "BoardModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "boards"
                                ]
                            }
                        }
                    }
                ]
            },
            "BoardTitleModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "board_titles"
                                ]
                            }
                        }
                    }
                ]
            },
            "CountryModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "countries"
                                ]
                            },
                            "field_country_name": {
                                "type": "string",
                                "enum": [
                                    "country_name"
                                ]
                            },
                            "field_country_acronym": {
                                "type": "string",
                                "enum": [
                                    "country_acronym"
                                ]
                            }
                        }
                    }
                ]
            },
            "KanbanModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "kanbans"
                                ]
                            },
                            "field_kanban_title_id": {
                                "type": "string",
                                "enum": [
                                    "kanban_title_id"
                                ]
                            },
                            "field_project_id": {
                                "type": "string",
                                "enum": [
                                    "project_id"
                                ]
                            },
                            "field_created_at": {
                                "type": "string",
                                "enum": [
                                    "created_at"
                                ]
                            },
                            "field_updated_at": {
                                "type": "string",
                                "enum": [
                                    "updated_at"
                                ]
                            }
                        }
                    }
                ]
            },
            "KanbanTitleModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "kanban_titles"
                                ]
                            }
                        }
                    }
                ]
            },
            "MemberGroupModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "member_groups"
                                ]
                            }
                        }
                    }
                ]
            },
            "NewsletterSubscriptionModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "newsletter_users"
                                ]
                            },
                            "field_email_id": {
                                "type": "string",
                                "enum": [
                                    "email_id"
                                ]
                            },
                            "field_options": {
                                "type": "string",
                                "enum": [
                                    "options"
                                ]
                            }
                        }
                    }
                ]
            },
            "PersonFirstnameModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "person_name_first"
                                ]
                            }
                        }
                    }
                ]
            },
            "PersonNameModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "timestamps": {
                                "type": "boolean"
                            },
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 4,
                                "minimum": 4
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "person_name"
                                ]
                            },
                            "field_account_information_id": {
                                "type": "string",
                                "enum": [
                                    "account_information_id"
                                ]
                            },
                            "field_person_name_first_id": {
                                "type": "string",
                                "enum": [
                                    "person_name_first_id"
                                ]
                            },
                            "field_person_name_lastname_id": {
                                "type": "string",
                                "enum": [
                                    "person_name_lastname_id"
                                ]
                            },
                            "field_person_name_middlename": {
                                "type": "string",
                                "enum": [
                                    "person_name_middlename"
                                ]
                            }
                        }
                    }
                ]
            },
            "PersonSurnameModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "person_name_middle_and_last"
                                ]
                            }
                        }
                    }
                ]
            },
            "ProjectMemberModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "project_members"
                                ]
                            },
                            "project_id": {
                                "type": "string",
                                "enum": [
                                    "project_id"
                                ]
                            },
                            "account_id": {
                                "type": "string",
                                "enum": [
                                    "account_id"
                                ]
                            },
                            "member_group_id": {
                                "type": "string",
                                "enum": [
                                    "member_group_id"
                                ]
                            }
                        }
                    }
                ]
            },
            "ProjectModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 4,
                                "minimum": 4
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "projects"
                                ]
                            },
                            "field_account_owner_id": {
                                "type": "string",
                                "enum": [
                                    "account_owner_id"
                                ]
                            },
                            "field_project_title_id": {
                                "type": "string",
                                "enum": [
                                    "project_title_id"
                                ]
                            },
                            "field_description": {
                                "type": "string",
                                "enum": [
                                    "description"
                                ]
                            },
                            "field_tags": {
                                "type": "string",
                                "enum": [
                                    "tags"
                                ]
                            },
                            "field_created_at": {
                                "type": "string",
                                "enum": [
                                    "created_at"
                                ]
                            },
                            "field_updated_at": {
                                "type": "string",
                                "enum": [
                                    "updated_at"
                                ]
                            }
                        }
                    }
                ]
            },
            "ProjectTitleModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionLabelModel"
                    },
                    {
                        "properties": {
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "project_titles"
                                ]
                            }
                        }
                    }
                ]
            },
            "TaskModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "tasks"
                                ]
                            },
                            "field_board_id": {
                                "type": "string",
                                "enum": [
                                    "board_id"
                                ]
                            },
                            "field_content": {
                                "type": "string",
                                "enum": [
                                    "content"
                                ]
                            }
                        }
                    }
                ]
            },
            "User": {
                "properties": {
                    "fillable": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "maximum": 9,
                        "minimum": 9
                    },
                    "hidden": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "maximum": 4,
                        "minimum": 4
                    },
                    "table_name": {
                        "type": "string",
                        "enum": [
                            "accounts"
                        ]
                    },
                    "field_username": {
                        "type": "string",
                        "enum": [
                            "username"
                        ]
                    },
                    "field_name": {
                        "type": "string",
                        "enum": [
                            "name"
                        ]
                    },
                    "field_email_id": {
                        "type": "string",
                        "enum": [
                            "email_id"
                        ]
                    },
                    "field_password": {
                        "type": "string",
                        "enum": [
                            "password"
                        ]
                    },
                    "field_created_at": {
                        "type": "string",
                        "enum": [
                            "created_at"
                        ]
                    },
                    "field_updated_at": {
                        "type": "string",
                        "enum": [
                            "updated_at"
                        ]
                    },
                    "field_settings": {
                        "type": "string",
                        "enum": [
                            "settings"
                        ]
                    },
                    "field_remember_token": {
                        "type": "string",
                        "enum": [
                            "remember_token"
                        ]
                    },
                    "field_verified_at": {
                        "type": "string",
                        "enum": [
                            "email_verified_at"
                        ]
                    }
                },
                "type": "object"
            },
            "ZipCodeModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExtensionNoTimestampModel"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "field_table_name": {
                                "type": "string",
                                "enum": [
                                    "zip_codes"
                                ]
                            },
                            "field_area_name": {
                                "type": "string",
                                "enum": [
                                    "area_name"
                                ]
                            },
                            "field_zip_number": {
                                "type": "string",
                                "enum": [
                                    "zip_number"
                                ]
                            },
                            "field_country_id": {
                                "type": "string",
                                "enum": [
                                    "country_id"
                                ]
                            }
                        }
                    }
                ]
            },
            "BaseModel": {},
            "ExtensionLabelModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "timestamps": {
                                "type": "boolean"
                            },
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "field_content": {
                                "type": "string",
                                "enum": [
                                    "content"
                                ]
                            }
                        }
                    }
                ]
            },
            "ExtensionNoTimestampModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "timestamps": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "ModelView": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "timestamps": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "AccountViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 9,
                                "minimum": 9
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 5,
                                "minimum": 5
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "accounts_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "AddressViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 7,
                                "minimum": 7
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "addresses_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "BoardViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 6,
                                "minimum": 6
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "boards_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "KanbanViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 5,
                                "minimum": 5
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "kanbans_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "NewsletterViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 3,
                                "minimum": 3
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "newsletter_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "PersonNameViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 5,
                                "minimum": 5
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "person_names_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "ProjectViewModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 7,
                                "minimum": 7
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 2,
                                "minimum": 2
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "projects_view"
                                ]
                            }
                        }
                    }
                ]
            },
            "ZipCodeViewFullModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 5,
                                "minimum": 5
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "zip_codes_view_full"
                                ]
                            }
                        }
                    }
                ]
            },
            "ZipCodeViewShortModel": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ModelView"
                    },
                    {
                        "properties": {
                            "fillable": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 4,
                                "minimum": 4
                            },
                            "hidden": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "maximum": 1,
                                "minimum": 1
                            },
                            "table_name": {
                                "type": "string",
                                "enum": [
                                    "zip_codes_view_short"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "securitySchemes": {
            "account_logout": {
                "type": "http",
                "name": "authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            },
            "account_update": {
                "type": "http",
                "name": "authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            },
            "account_deletion": {
                "type": "http",
                "description": "",
                "name": "authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            }
        }
    },
    "tags": [
        {
            "name": "1.0.0",
            "description": ""
        },
        {
            "name": "account",
            "description": ""
        },
        {
            "name": "account-additional",
            "description": ""
        },
        {
            "name": "account-options",
            "description": ""
        },
        {
            "name": "newsletter",
            "description": ""
        },
        {
            "name": "tools",
            "description": ""
        },
        {
            "name": "security",
            "description": ""
        },
        {
            "name": "authentication",
            "description": ""
        }
    ]
}